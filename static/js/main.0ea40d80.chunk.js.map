{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","RollModRadio","props","state","value","handleChange","bind","event","this","setState","target","updateAlea","diceNumber","className","onChange","type","name","React","Component","NumberForm","handleSubmit","preventDefault","onSubmit","label","Button","onClick","ShowResults","showResults","percentFlag","results","toFixed","moddedResults","Alea","d20s","attackMod","ac","attackCalcReady","hitChance","d4s","d6s","d8s","d10s","d12s","damageMod","damageCalcReady","damageTotal","rollMod","moddedHitChance","moddedDamageTotal","val","newState","Object","assign","baseHitChance","baseModdedHitChance","i","total","moddedTotal","updateD20s","updateRollMod","updateAttack","updateAc","handleAttackClick","updateD4s","updateD6s","updateD8s","updateD10s","updateD12s","updateDamageMod","handleDamageClick","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0ea40d80.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\n\nclass RollModRadio extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {value: ''};\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(event){\n    this.setState({value: event.target.value});\n    this.props.updateAlea(event.target.value);\n  }\n\n  render() {\n    if(this.props.diceNumber > 1){\n        return (\n        <div className=\"RollModRadio\" onChange={this.handleChange}>\n          <input type=\"radio\" value=\"Advantage\" name=\"rollMod\" /> Advantage\n          <input type=\"radio\" value=\"Disadvantage\" name=\"rollMod\" /> Disadvantage\n        </div>\n      );\n    }\n    else{\n      return null;\n    }\n  }\n  \n\n}\n\n\nclass NumberForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {value: ''};\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({value: event.target.value});\n    this.props.updateAlea(event.target.value);\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n  }\n\n  render() {\n    return (\n      <form className=\"NumberForm\" onSubmit={this.handleSubmit}>\n        <label>\n          {this.props.label}\n          <input type=\"number\" value={this.state.value} onChange={this.handleChange}/>\n        </label>\n      </form>\n    )\n  }\n}\n\n\nclass Button extends React.Component {\n  render(){\n    return (\n      <button onClick={this.props.onClick}>\n        {this.props.label}\n      </button>\n    );  \n  }\n }\n\n class ShowResults extends React.Component {\n   render(){\n    if(this.props.showResults) { \n        if(this.props.percentFlag){\n          return (\n            <div className= \"ShowResults\"> {this.props.results.toFixed(2)}% &nbsp;&nbsp;&nbsp;&nbsp;{\"With -5 to hit: \"} &nbsp;&nbsp;&nbsp;&nbsp;{this.props.moddedResults.toFixed(2)}%</div>\n          )\n        }\n        else{\n          return (\n            <div className= \"ShowResults\">  {this.props.results.toFixed(2)} &nbsp;&nbsp;&nbsp;&nbsp;{\"With +10 to damage: \"} &nbsp;&nbsp; &nbsp;&nbsp;{this.props.moddedResults.toFixed(2)}</div>\n          )\n        }\n  }\n    else{\n      return null;\n    }\n   }\n }\n\nclass Alea extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {d20s: 1, attackMod: '', ac: '', attackCalcReady : false, hitChance: 100, \n                  d4s: 0, d6s: 0, d8s: 0, d10s: 0, d12s: 0, damageMod: 0, damageCalcReady: false, \n                  damageTotal: 0, rollMod: '', moddedHitChance: 0, moddedDamageTotal: 0};\n  }\n  updateD20s(val){\n    let newState = Object.assign({}, this.state);\n    newState.d20s = val;\n    newState.attackCalcReady = false;\n    newState.hitChance = 100;\n    this.setState(newState);\n  }\n  updateAttack(val){\n    let newState = Object.assign({}, this.state);\n    newState.attackMod = val;\n    newState.attackCalcReady = false;\n    newState.hitChance = 100;\n    this.setState(newState);\n  }\n  updateAc(val){\n    let newState = Object.assign({}, this.state);\n    newState.ac = val;\n    newState.attackCalcReady = false;\n    newState.hitChance = 100;\n    this.setState(newState);\n  }\n\n  updateD4s(val){\n    let newState = Object.assign({}, this.state);\n    newState.d4s = val;\n    newState.damageCalcReady = false;\n    this.setState(newState);\n  }\n\n  updateD6s(val){\n    let newState = Object.assign({}, this.state);\n    newState.d6s = val; \n    newState.damageCalcReady = false;\n    this.setState(newState);\n  }\n\n  updateD8s(val){\n    let newState = Object.assign({}, this.state);\n    newState.d8s = val; \n    newState.damageCalcReady = false;\n    this.setState(newState);\n  }\n\n  updateD10s(val){\n    let newState = Object.assign({}, this.state);\n    newState.d10s = val;\n    newState.damageCalcReady = false; \n    this.setState(newState);\n  }\n\n  updateD12s(val){\n    let newState = Object.assign({}, this.state);\n    newState.d12s = val;\n    newState.damageCalcReady = false; \n    this.setState(newState);\n  }\n\n  updateDamageMod(val){\n    let newState = Object.assign({}, this.state);\n    newState.damageMod = val;\n    newState.damageCalcReady = false; \n    this.setState(newState);\n  }\n\n  updateRollMod(val){\n    let newState = Object.assign({}, this.state);\n    newState.rollMod = val;\n    this.setState(newState);\n  }\n\n  handleAttackClick(){\n    let newState = Object.assign({}, this.state);\n    newState.attackCalcReady = true;\n    \n    let rollNeeded = this.state.ac - this.state.attackMod;\n    let successValues = 20 - rollNeeded + 1;\n    let hitChance = (successValues * .05 );\n    let moddedHitChance = hitChance - 0.25;\n    if(hitChance > .95){\n      hitChance = .95; \n    }\n    if(hitChance < .05){\n      hitChance = .05;\n    }\n    if(moddedHitChance > .95){\n      moddedHitChance = .95; \n    }\n    if(moddedHitChance < .05){\n      moddedHitChance = .05;\n    }\n    let baseHitChance = hitChance;\n    let baseModdedHitChance = moddedHitChance;\n    if(this.state.d20s > 1) {\n      if(this.state.rollMod === \"Advantage\"){\n        for (let i = 1; i < this.state.d20s; i++){\n          hitChance = (hitChance + baseHitChance) - (hitChance * baseHitChance);\n          moddedHitChance = (moddedHitChance + baseModdedHitChance) - (moddedHitChance * baseModdedHitChance);\n        }\n      }\n      if(this.state.rollMod === \"Disadvantage\"){\n        for (let i = 1; i < this.state.d20s; i++){\n          hitChance = (hitChance * baseHitChance);\n          moddedHitChance = (moddedHitChance * baseModdedHitChance);\n        }\n      }\n      \n    }\n    hitChance *= 100; \n    moddedHitChance *= 100;\n    newState.hitChance = hitChance;\n    newState.moddedHitChance = moddedHitChance;\n    \n    \n    this.setState(newState);\n  }\n\n  handleDamageClick() {\n    let newState = Object.assign({}, this.state);\n    newState.damageCalcReady = true;\n\n    let total = (this.state.d4s * 2.5) + (this.state.d6s * 3.5) + (this.state.d8s * 4.5) + (this.state.d10s * 5.5) + (this.state.d12s * 6.5) + (this.state.damageMod * 1);\n    let moddedTotal = total + 10; \n    let hitChance = this.state.hitChance / 100.0;\n    let moddedHitChance = this.state.moddedHitChance / 100.0;\n    total *= hitChance;\n    moddedTotal *= moddedHitChance;\n    newState.damageTotal = total;\n    newState.moddedDamageTotal = moddedTotal;\n\n    this.setState(newState);\n  }\n  \n  render() {\n    return (\n      <div className = \"alea\">\n      <header>\n      <h1> Accuracy Calculation </h1> \n      </header>\n        <NumberForm updateAlea={this.updateD20s.bind(this) } label=\"Number of d20s:\"/>\n        <RollModRadio updateAlea={this.updateRollMod.bind(this)} diceNumber={this.state.d20s}/>\n        <NumberForm updateAlea={ this.updateAttack.bind(this) } label=\"Attack Mod:\"/>\n        <NumberForm updateAlea={ this.updateAc.bind(this) } label=\"Target AC:\" />\n        <br></br>\n      <div> \n      <Button onClick={this.handleAttackClick.bind(this)} label= \"Calculate Attack Chance!\"/>\n      <ShowResults showResults={this.state.attackCalcReady} results={this.state.hitChance} percentFlag={true} moddedResults={this.state.moddedHitChance}/>\n      </div>\n      <br></br>\n      <header>\n      <h1> Damage Calculation </h1> \n      </header>\n      <div>\n        <NumberForm updateAlea={this.updateD4s.bind(this)} label=\"D4s:\"/>\n        <NumberForm updateAlea={this.updateD6s.bind(this)} label=\"D6s:\"/>\n        <NumberForm updateAlea={this.updateD8s.bind(this)} label=\"D8s:\"/>\n        <NumberForm updateAlea={this.updateD10s.bind(this)} label=\"D10s:\"/>\n        <NumberForm updateAlea={this.updateD12s.bind(this)} label=\"D12s:\"/>\n        <NumberForm updateAlea={this.updateDamageMod.bind(this)} label=\"Damage Mod:\"/>\n      </div>\n      <br></br>\n      <div> \n      <Button onClick={this.handleDamageClick.bind(this)} label= \"Calculate Average Damage!\"/>\n      <ShowResults showResults={this.state.damageCalcReady} results={this.state.damageTotal} percentFlag={false} moddedResults={this.state.moddedDamageTotal}/>\n      </div>\n      </div>      \n    )\n  }\n}\n\nReactDOM.render(\n<Alea />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}